{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/post-status-filter/post-status-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/app.js","reportWebVitals.js","index.js"],"names":["Header","styled","div","props","colored","AppHeader","liked","allPosts","SearchPanel","state","term","onUpdateSearch","bind","e","target","value","this","setState","className","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","cssClass","onClick","PostListItem","important","like","onDelete","onToggleImportant","onToggleLiked","classNames","PostList","posts","elements","item","id","itemProps","ListGroup","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","AppBlock","StyledAppBlock","App","data","deleteItem","addItem","maxId","index","findIndex","elem","before","slice","after","body","newItem","old","items","length","indexOf","visiblePosts","filterPosts","searchPosts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89859c0b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './app-header.css';\r\nimport styled from 'styled-components';\r\n\r\n// Можно использовать как любой другой тэг as=\"a\", as=\"span\"\r\nconst Header = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    h1 {\r\n        font-size: 26px;\r\n        color: ${props => props.colored ? 'red' : 'black'};\r\n        :hover{\r\n            color:blue;\r\n        }\r\n    }\r\n    h2 {\r\n        font-size: 1.2rem;\r\n        color: grey;\r\n    }\r\n`\r\n\r\nconst AppHeader = ({ liked, allPosts }) => {\r\n    return (\r\n        <Header>\r\n            <h1>Vlad Bond</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.onUpdateSearch}\r\n            >\r\n            </input>\r\n\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\n// import { Button } from 'reactstrap';\r\n\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            { name: 'all', label: 'Все' },\r\n            { name: 'like', label: 'Понравилось' }\r\n        ];\r\n    }\r\n    render() {\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const { filter, onFilterSelect } = this.props;\r\n            const active = filter === name;\r\n            const cssClass = active ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button\r\n                    key={name}\r\n                    className={`btn ${cssClass}`}\r\n                    type=\"button\"\r\n                    onClick={() => onFilterSelect(name)}\r\n                >{label}</button>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\nimport './post-list-item.css';\r\n\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n\r\n    onImportant() {\r\n        this.setState(({ important }) => ({\r\n            important: !important\r\n        }))\r\n    }\r\n\r\n    onLike() {\r\n        this.setState(({ like }) => ({\r\n            like: !like\r\n        }))\r\n    }\r\n\r\n    render() {\r\n\r\n        const { label, onDelete, onToggleImportant, onToggleLiked, important, like } = this.props;\r\n\r\n        let classNames = \"app-list-item d-flex justify-content-between\";\r\n\r\n        if (important) {\r\n            classNames += ` important`;\r\n        }\r\n\r\n        if (like) {\r\n            classNames += ` like`;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span\r\n                    onClick={onToggleLiked}\r\n                    className=\"app-list-item-label\"\r\n                >\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-between aligh-item-center\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn-star btn-sm\"\r\n                        onClick={onToggleImportant}\r\n                    >\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn-trash btn-sm\"\r\n                        onClick={onDelete}\r\n                    >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// const PostListItem = ({ label, important = false }) => {\r\n\r\n//     let classNames = \"app-list-item d-flex justify-content-between\";\r\n\r\n//     if (important) {\r\n//         classNames += ` important`;\r\n//     }\r\n\r\n//     return (\r\n//         <div className={classNames}>\r\n//             <span className=\"app-list-item-label\">\r\n//                 {label}\r\n//             </span>\r\n//             <div className=\"d-flex justify-content-between aligh-item-center\">\r\n//                 <button\r\n//                     type=\"submit\"\r\n//                     className=\"btn-star btn-sm\"\r\n//                 >\r\n//                     <i className=\"fa fa-star\"></i>\r\n//                 </button>\r\n//                 <button\r\n//                     type=\"submit\"\r\n//                     className=\"btn-trash btn-sm\"\r\n//                 >\r\n//                     <i className=\"fa fa-trash-o\"></i>\r\n//                 </button>\r\n//                 <i className=\"fa fa-heart\"></i>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default PostListItem;","import React from 'react';\r\n\r\nimport PostListItem from '../post-list-item/post-list-item';\r\nimport { ListGroup } from 'reactstrap';\r\n\r\nimport './post-list.css';\r\n\r\nconst PostList = ({ posts, onDelete, onToggleImportant, onToggleLiked }) => {\r\n\r\n    const elements = posts.map((item) => {\r\n        // Айдишник берем тут при переборе.\r\n        const { id, ...itemProps } = item;\r\n\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                {/* <PostListItem\r\n                    label={item.label}\r\n                    important={item.important}\r\n                /> */}\r\n                <PostListItem\r\n                    {...itemProps}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleLiked={() => onToggleLiked(id)}\r\n                />\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ListGroup className=\"app-list\">\r\n            {elements}\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default PostList;","import React, { Component } from 'react';\r\n\r\nimport './post-add-form.css'\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: \"\"\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    }\r\n\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text)\r\n        this.setState({\r\n            text: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"О чем вы думаете сейчас?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                >\r\n                </input>\r\n                <button\r\n                    className=\"btn btn-outline-secondary\"\r\n                    type=\"submit\"\r\n                >\r\n                    Добавить\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport PostStatusFilter from '../post-status-filter/post-status-filter';\r\nimport PostList from '../post-list/post-list';\r\nimport PostAddForm from '../post-add-form/post-add-form'\r\n\r\nimport './app.css'\r\n// Можно прописать стили прям внутри jsa\r\nimport styled from 'styled-components';\r\n\r\n\r\n// Будет создан див и применены такие стили\r\nconst AppBlock = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n`;\r\n// Наследование стайлед компонентов\r\nconst StyledAppBlock = styled(AppBlock)`\r\n    // background-color: grey;\r\n`;\r\n\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                { label: \"Going to learn React\", important: true, like: false, id: 1 },\r\n                { label: \"That is so good\", important: false, like: false, id: 2 },\r\n                { label: \"I need a break...\", important: false, like: false, id: 3 }\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        }\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n        this.maxId = 4;\r\n\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id)\r\n            // Следуем принципу иммутабельности объекта создаем новый массив, а не меняем исходный\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n\r\n            const newArr = [...before, ...after];\r\n            return {\r\n                data: newArr\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++,\r\n        }\r\n\r\n        this.setState(({ data }) => {\r\n            const newArr = [...data, newItem];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = { ...old, important: !old.important };\r\n\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n\r\n            const newArr = [...before, newItem, ...after];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = { ...old, like: !old.like };\r\n\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n\r\n            const newArr = [...before, newItem, ...after];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    searchPosts(items, term) {\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1;\r\n        });\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({ term });\r\n    }\r\n\r\n    filterPosts(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like);\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({ filter });\r\n    }\r\n\r\n    render() {\r\n        const { data, term, filter } = this.state;\r\n\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visiblePosts = this.filterPosts(this.searchPosts(data, term), filter);\r\n\r\n        return (\r\n            <StyledAppBlock>\r\n                <AppHeader\r\n                    liked={liked}\r\n                    allPosts={allPosts}\r\n                />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                        onUpdateSearch={this.onUpdateSearch}\r\n                    />\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}\r\n                    />\r\n                </div>\r\n                <PostList\r\n                    posts={visiblePosts}\r\n                    // Пробрасываем пропс\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}\r\n                />\r\n                <PostAddForm\r\n                    onAdd={this.addItem}\r\n                />\r\n            </StyledAppBlock>\r\n        )\r\n    }\r\n}\r\n\r\n// const App = () => {\r\n\r\n//     const data = [\r\n//         { label: \"Going to learn React\", important: true, id: 'qwqw' },\r\n//         { label: \"That is so good\", important: false, id: 'weewe' },\r\n//         { label: \"I need a break...\", important: false, id: 'fgg' }\r\n//     ]\r\n\r\n//     return (\r\n//         <StyledAppBlock>\r\n//             <AppHeader />\r\n//             <div className=\"search-panel d-flex\">\r\n//                 <SearchPanel />\r\n//                 <PostStatusFilter />\r\n//             </div>\r\n//             <PostList\r\n//                 posts={data}\r\n//                 // Пробрасываем пропс\r\n//                 onDelete={id => console.log(id)}\r\n//             />\r\n//             <PostAddForm />\r\n//         </StyledAppBlock>\r\n//     )\r\n// }\r\n\r\n// export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/app/app';\nimport reportWebVitals from './reportWebVitals';\n\n\n// Кoмпоненты это функции которые могут возвращать jsx елементы,\n// они должны быть написаны с большой буквы\n\n// const Header = () => {\n//   // Защита от вредоносных скриптов, реакт тупо записывает его сторокой =)\n//  const src = <script>asdadssd</script>\n//   const scr = `Hello world!!`\n//   return <h2>{scr}</h2>\n// }\n\n// const Field = () => {\n//   const holder = \"Enter here\";\n//   const styledField = {\n//     width: `300px`\n//   }\n\n//   return <input\n//     style={styledField}\n//     type=\"text\"\n//     placeholder={holder}\n//     autoComplete=\"\"\n//     className=\"first\"\n//     htmlFor=\"\"\n//   />\n// }\n\n// const Button = () => {\n//   const text = `Log in`;\n//   const logged = false;\n//   // const res = () => {\n//   //   return `Log in, please`\n//   // }\n//   // ошибка, объекты нельзяя помещать в переменные для рендера их в приложении\n//   // const p = {}\n//   // const p = <p>Log in</p>\n//   return <button>{logged ? `Enter` : text}</button>\n//   // return <button>{3 + 4}</button>\n// }\n\n// const App = () => {\n//   return (\n//     <div>\n//       <Header />\n//       <Field />\n//       <Button />\n//     </div>\n//   )\n// }\n\n// function WhoAmI({name,surname,link}) {\n// function WhoAmI(props) {\n//   return (\n//     // <React.Fragment>\n//     //   <h1>My name is , surname - </h1>\n//     //   <a href=\"\">My profile</a>\n//     // </React.Fragment>\n\n//     // Новый синтаксис обретки без лишнего дива и реакт фрагмента\n//     <>\n//       <h1>My name is {props.name}, surname - {props.surname}</h1>\n//       <a href={props.link}>My profile</a>\n//     </>\n//   )\n// }\n\n// OOP style\n\n// class WhoAmI extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       years: 26,\n//       // nationality: 'uk'\n//     }\n//     // this.nextYear = this.nextYear.bind(this);\n//     // this.nextYear = () => {\n//     //   this.setState(state => ({\n//     //     years: ++state.years\n//     //   }))\n//     // }\n//   }\n\n//   // Class fields позволяет записывать свойства и методы класса в не конструктора\n//   // state = {\n//   //   years: 26\n//   // }\n\n//   nextYear = () => {\n//     this.setState(state => ({\n//       years: ++state.years\n//     }))\n//   }\n\n//   // nextYear() {\n//   //   // Ошибка, мутировать нельзя\n//   //   // this.state.years++\n//   //   this.setState(state => ({\n//   //     years: ++state.years\n//   //   }))\n//   // }\n\n//   render() {\n//     const { name, surname, link } = this.props;\n//     const { years } = this.state;\n//     return (\n//       <>\n//         <button onClick={this.nextYear}>++</button>\n//         <h1>My name is {name}, surname - {surname}, years: {years}</h1>\n//         <a href={link}>My profile</a>\n//       </>\n//     )\n//   }\n// }\n\n// const All = () => {\n//   return (\n//     <>\n//       <WhoAmI name=\"John\" surname=\"Smith\" link=\"facebook.com\" />\n//       <WhoAmI name=\"Ivan\" surname=\"Shepard\" link=\"facebook.com\" />\n//       <WhoAmI name=\"Vlad\" surname=\"Smith\" link=\"facebook.com\" />\n//     </>\n//   )\n// }\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}